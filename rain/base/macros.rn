macro print_all(args) as (args)
  let node = ast.block:empty()
  save node

  let print_name = ast.name:new("print")

  for arg in args:values()
    node:add(print_name:call([arg]))

macro call(expr, argblock) as (fn, args)
  return ast.call:new(fn, args)

macro catchcall(expr, argblock) as (fn, args)
  return ast.catchcall:new(fn, args)
