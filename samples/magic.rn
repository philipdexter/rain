var wrapper = table

wrapper.new = func(self, value)
  return {value = value} :: self

wrapper.str = func(self)
  return "wrap(" $ tostr(self.value) $ ")"

wrapper.add = func(self, other)
  return {value = self.value + other.value} :: meta(self)

wrapper.mul = func(self, other)
  return {value = self.value * other.value} :: meta(self)

wrapper.sub = func(self, other)
  return {value = self.value - other.value} :: meta(self)

wrapper.div = func(self, other)
  return {value = self.value / other.value} :: meta(self)

var main = func()
  var a = wrapper:new(40)
  var b = wrapper:new(8)
  var add = a + b
  var mul = a * b
  var div = a / b
  var sub = a - b
  print(a)
  print(b)
  print(add)
  print(mul)
  print(div)
  print(sub)
